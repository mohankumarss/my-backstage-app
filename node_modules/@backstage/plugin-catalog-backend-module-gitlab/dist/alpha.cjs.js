'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var backendPluginApi = require('@backstage/backend-plugin-api');
var backendCommon = require('@backstage/backend-common');
var alpha = require('@backstage/plugin-catalog-node/alpha');
var GitlabDiscoveryEntityProvider = require('./cjs/GitlabDiscoveryEntityProvider-c1949eb0.cjs.js');
require('@backstage/catalog-model');
require('@backstage/integration');
require('lodash');
require('uuid');
require('node-fetch');
require('@backstage/backend-tasks');
require('@backstage/plugin-catalog-node');

const catalogModuleGitlabDiscoveryEntityProvider = backendPluginApi.createBackendModule({
  pluginId: "catalog",
  moduleId: "gitlab-discovery-entity-provider",
  register(env) {
    env.registerInit({
      deps: {
        config: backendPluginApi.coreServices.rootConfig,
        catalog: alpha.catalogProcessingExtensionPoint,
        logger: backendPluginApi.coreServices.logger,
        scheduler: backendPluginApi.coreServices.scheduler
      },
      async init({ config, catalog, logger, scheduler }) {
        catalog.addEntityProvider(
          GitlabDiscoveryEntityProvider.GitlabDiscoveryEntityProvider.fromConfig(config, {
            logger: backendCommon.loggerToWinstonLogger(logger),
            scheduler
          })
        );
      }
    });
  }
});

exports["default"] = catalogModuleGitlabDiscoveryEntityProvider;
//# sourceMappingURL=alpha.cjs.js.map
